{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 6,
   "id": "68f5346b",
   "metadata": {},
   "outputs": [],
   "source": [
    "import mysql.connector\n",
    "from mysql.connector import Error\n",
    "import pandas as pd"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "5425fca3",
   "metadata": {},
   "source": [
    "#### Conectando ao MySQL Server"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "id": "dc9b00fc",
   "metadata": {},
   "outputs": [],
   "source": [
    "# Função para conectar ao banco do My SQL\n",
    "\n",
    "def create_server_connection(host_name, user_name, user_password):\n",
    "    connection = None\n",
    "    try:\n",
    "        connection = mysql.connector.connect(\n",
    "            host = host_name,\n",
    "            user = user_name,\n",
    "            passwd = user_password\n",
    "        )\n",
    "        print(\"Conexão com a base de dados do MySQL bem sucedida!\")\n",
    "    except Error as err:\n",
    "        print(f\"Erro: '{err}'\")\n",
    "    \n",
    "    return connection"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "0125bfba",
   "metadata": {},
   "source": [
    "Na primeira linha, damos um nome à função (create_server_connection) e aos seus argumentos (host_name, user_name e user_password).\n",
    "Na linha seguinte, encerramos quaisquer conexões existentes para que o servidor não fique confuso com várias conexões abertas."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "id": "dd5977cf",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Conexão com a base de dados do MySQL bem sucedida!\n"
     ]
    }
   ],
   "source": [
    "pw = '1234'\n",
    "connection = create_server_connection('localhost','root',pw)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "820993d6",
   "metadata": {},
   "source": [
    "#### Criando um novo banco de dados"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "id": "4448c40f",
   "metadata": {},
   "outputs": [],
   "source": [
    "# Função que executa uma query para criar um banco de dados\n",
    "\n",
    "def create_database(connection, query):\n",
    "    cursor = connection.cursor()\n",
    "    try:\n",
    "        cursor.execute(query)\n",
    "        print(\"Database created successfully\")\n",
    "    except Error as err:\n",
    "        print(f\"Error: '{err}'\")"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "36d1979b",
   "metadata": {},
   "source": [
    "Essa função recebe dois argumentos, connection (nosso objeto de conexão) e query (um código SQL que escreveremos na próxima etapa). Ela executa a consulta no servidor através da conexão."
   ]
  },
  {
   "cell_type": "markdown",
   "id": "521fc9db",
   "metadata": {},
   "source": [
    "## Projeto - Análise de Compras no Supermercado"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "81c11d11",
   "metadata": {},
   "source": [
    "O projeto consiste na análise de compras das notas fiscais do Supermercado Mateus (ou filiais). A ideia é modelar um banco, com base nos itens presentes nas notas fiscais, e criar um registro dos dados. Após um certo numero de notas, será dado prosseguimento com a análise dos itens mais comprados, frequência de compras, variação no preço, etc.\n",
    "Estão previstas as seguintes etapas:\n",
    "- 1 Modelagem do Banco de dados (etapa atual - 16/02/2025)\n",
    "- 2 Interface para inserção de dados\n",
    "- 3 Análise dos dados"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "7e49c30a",
   "metadata": {},
   "source": [
    "### Modelagem do Banco"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "id": "fde354ce",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Database created successfully\n"
     ]
    }
   ],
   "source": [
    "create_database_query = 'CREATE DATABASE supermercado'\n",
    "create_database(connection, create_database_query)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "aa7555a1",
   "metadata": {},
   "source": [
    "Uma vez criado o nome, agora é possível passar o banco que será utilizado nesse projeto e modificar a função creade_db_connection:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "id": "ee2e278b",
   "metadata": {},
   "outputs": [],
   "source": [
    "# Nova versão da função para conectar ao banco do My SQL\n",
    "\n",
    "def create_db_connection(host_name, user_name, \n",
    "                             user_password, db_name):\n",
    "    connection = None\n",
    "    try:\n",
    "        connection = mysql.connector.connect(\n",
    "            host = host_name,\n",
    "            user = user_name,\n",
    "            passwd = user_password,\n",
    "            database = db_name\n",
    "            \n",
    "        )\n",
    "        print(\"Conexão com a base de dados do MySQL bem sucedida!\")\n",
    "    except Error as err:\n",
    "        print(f\"Erro: '{err}'\")\n",
    "    \n",
    "    return connection"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "62cabef1",
   "metadata": {},
   "source": [
    "#### Função para execução de consultas"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "id": "5687f539",
   "metadata": {},
   "outputs": [],
   "source": [
    "def execute_query(connection, query):\n",
    "    cursor = connection.cursor()\n",
    "    try:\n",
    "        cursor.execute(query)\n",
    "        connection.commit()\n",
    "        print(\"Query bem sucedida!\")\n",
    "    except Error as err:\n",
    "        print(f\"Error: '{err}'\")"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "17307beb",
   "metadata": {},
   "source": [
    "#### Criando as Tabelas do banco"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "id": "2345fede",
   "metadata": {},
   "outputs": [],
   "source": [
    "# Notação em aspas triplas pois a criação das tabelas necessita de multiplas linhas\n",
    "create_tabela_nota = \"\"\"\n",
    "    CREATE TABLE nota (\n",
    "    Codigo_prod BIGINT PRIMARY KEY,\n",
    "    Descricao VARCHAR(255) NOT NULL,\n",
    "    Quantidade DECIMAL (5,3) NOT NULL,\n",
    "    ValorUnit DECIMAL (5,2) NOT NULL,\n",
    "    Local VARCHAR(255) NOT NULL,\n",
    "    Data DATE NOT NULL);\n",
    "\"\"\""
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 37,
   "id": "636c3c2d",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Conexão com a base de dados do MySQL bem sucedida!\n",
      "Query bem sucedida!\n"
     ]
    }
   ],
   "source": [
    "connection = create_db_connection(\"localhost\", \"root\", pw, 'supermercado') # Connect to the Database\n",
    "execute_query(connection, create_tabela_nota) # Execute our defined query"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "3453d73a",
   "metadata": {},
   "source": [
    "#### Inserindo dados "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 38,
   "id": "222572e3",
   "metadata": {},
   "outputs": [],
   "source": [
    "query = \"\"\"\n",
    "    INSERT INTO nota (Codigo_prod, Descricao, \n",
    "    Quantidade, ValorUnit, Local, Data) VALUES \n",
    "    (02900004362778, 'Vinagreira', 1, 3.09, 'COHATRAC IV', '2025-01-06'),\n",
    "    (02900004362259, 'Jongome', 1, 2.09, 'COHATRAC IV', '2025-01-06'),\n",
    "    (02900000024724, 'Bisteca Suina Congelada (Kg)', 0.424, 22.99, 'COHATRAC IV', '2025-01-06'),\n",
    "    (02900000091252, 'Cozidao Bovino (Kg)', 0.728, 26.99, 'COHATRAC IV', '2025-01-06'),\n",
    "    (07896419728870, 'File Peito Lar Bdj (Kg)', 1, 23.9, 'COHATRAC IV', '2025-01-06'),\n",
    "    (07896015601164, 'Areia para Gato Tidy Cat (2 Kg)', 1, 32.55, 'COHATRAC IV', '2025-01-06'),\n",
    "    (02900000014060, 'Batatinha Lav (Kg)', 0.575, 7.99, 'COHATRAC IV', '2025-01-06'),\n",
    "    (02900004361467, 'Maxixe e Quiabo (Kg)', 0.230, 22.49, 'COHATRAC IV', '2025-01-06'),\n",
    "    (02900000777835, 'Brocolis Ninja (Kg)', 0.264, 38.99, 'COHATRAC IV', '2025-01-06'),\n",
    "    (00192505231918, 'Pimenta Preta Moida 30g', 1, 3.59, 'COHATRAC IV', '2025-01-06'),\n",
    "    (07000002684287, 'Bolo caseiro da vovo laranja 430g', 1, 9.99, 'COHATRAC IV', '2025-01-06'),\n",
    "    (07898211383813, 'Oleo Capilar Keratex Alecrim 60 mL', 2, 9.99, 'COHATRAC IV', '2025-01-06'),\n",
    "    (07898211383837, 'Oleo Capilar Keratex Abacaxi 60 mL', 1, 9.99, 'COHATRAC IV', '2025-01-06'),\n",
    "    (07899676510950, 'Açucar cristal Blanco 1Kg', 1, 3.69, 'COHATRAC IV', '2025-01-06'),\n",
    "    (07899602500868, 'Seleta de legumes quero Sh 170g', 1, 4.85, 'COHATRAC IV', '2025-01-06'),\n",
    "    (07896029047101, 'Ração para gato Whiskas JR carne 85g', 1, 2.49, 'COHATRAC IV', '2025-01-06'),\n",
    "    (07896029046562, 'Ração para gato Whiskas AD atum 85g', 1, 2.49, 'COHATRAC IV', '2025-01-06');\n",
    "\"\"\""
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "b66eb320-4576-49ff-953f-d0e88bde60c2",
   "metadata": {},
   "outputs": [],
   "source": [
    "query2 = \"\"\"INSERT INTO nota (Codigo_prod, Descricao, Quantidade, ValorUnit, Local, Data) VALUES \n",
    "    (07898957749256, 'Uva Vitoria 500g', 1, 7.99, 'COHATRAC IV', '2025-02-12'),\n",
    "    (02900002715484, 'Maçã Kg', 0.680, 9.99, 'COHATRAC IV', '2025-02-12'),\n",
    "    (02900000087811, 'Abacate Kg', 0.480, 6.99, 'COHATRAC IV', '2025-02-12'),\n",
    "    (02900000087545, 'Melão Kg', 1.795, 3.49, 'COHATRAC IV', '2025-02-12'),\n",
    "    (07891008121728, 'Choc Branco Garoto',1, 8.89, 'COHATRAC IV','2025-02-12');\n",
    "\"\"\""
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "id": "268491a3",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Conexão com a base de dados do MySQL bem sucedida!\n",
      "Error: 'Unread result found'\n"
     ]
    }
   ],
   "source": [
    "connection = create_db_connection(\"localhost\", \"root\", pw, 'supermercado') # Connect to the Database\n",
    "execute_query(connection, query) # Execute our defined query"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "833c5e37",
   "metadata": {},
   "source": [
    "#### Calculando o valor da compra"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 14,
   "id": "d55054a2",
   "metadata": {},
   "outputs": [],
   "source": [
    "# Pega apenas o primeiro resultado\n",
    "# A função a seguir retorna o valor obtido na execução da query\n",
    "\n",
    "def execute_query(connection, query):\n",
    "    cursor = connection.cursor()\n",
    "    cursor.execute(query)\n",
    "    result = cursor.fetchone()  # Retorna uma tupla (ex: (150.75,))\n",
    "    cursor.close()\n",
    "    \n",
    "    return result[0] if result else None  # Retorna apenas o valor numérico\n",
    "\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 15,
   "id": "f839a8cc",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Conexão com a base de dados do MySQL bem sucedida!\n",
      "O valor total gasto foi: R$201.45\n"
     ]
    }
   ],
   "source": [
    "query = 'SELECT SUM(Quantidade * ValorUnit) AS valor_total FROM nota;'\n",
    "connection = create_db_connection(\"localhost\", \"root\", pw, 'supermercado')\n",
    "print(\"O valor total gasto foi: R${:.2f}\".format(execute_query(connection, query)))"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "630059af-680d-4338-a254-0385223be621",
   "metadata": {},
   "source": [
    "## Formatando os dados numa lista\n",
    "\n",
    "\n",
    "Como analista de dados, é provável que você entre em contato com bancos de dados existentes nas organizações em que trabalha. Será muito útil saber como extrair dados desses bancos de dados para que possam ser alimentados em seu pipeline de dados em Python. "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 19,
   "id": "d2f26682-4eaa-4a8b-bcde-be8e6e97e6f8",
   "metadata": {},
   "outputs": [],
   "source": [
    "def read_query(connection, query):\n",
    "    cursor = connection.cursor()\n",
    "    result = None\n",
    "    try:\n",
    "        cursor.execute(query)\n",
    "        result = cursor.fetchall()\n",
    "        return result\n",
    "    except Error as err:\n",
    "        print(f\"Error: '{err}'\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 21,
   "id": "ef8d1b6a-ae0f-46d3-808a-e8cb52d9124b",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Conexão com a base de dados do MySQL bem sucedida!\n",
      "(192505231918, 'Pimenta Preta Moida 30g', Decimal('1.000'), Decimal('3.59'), 'COHATRAC IV', datetime.date(2025, 1, 6))\n",
      "(2900000014060, 'Batatinha Lav (Kg)', Decimal('0.575'), Decimal('7.99'), 'COHATRAC IV', datetime.date(2025, 1, 6))\n",
      "(2900000024724, 'Bisteca Suina Congelada (Kg)', Decimal('0.424'), Decimal('22.99'), 'COHATRAC IV', datetime.date(2025, 1, 6))\n",
      "(2900000087545, 'Melão Kg', Decimal('1.795'), Decimal('3.49'), 'COHATRAC IV', datetime.date(2025, 2, 12))\n",
      "(2900000087811, 'Abacate Kg', Decimal('0.480'), Decimal('6.99'), 'COHATRAC IV', datetime.date(2025, 2, 12))\n",
      "(2900000091252, 'Cozidao Bovino (Kg)', Decimal('0.728'), Decimal('26.99'), 'COHATRAC IV', datetime.date(2025, 1, 6))\n",
      "(2900000777835, 'Brocolis Ninja (Kg)', Decimal('0.264'), Decimal('38.99'), 'COHATRAC IV', datetime.date(2025, 1, 6))\n",
      "(2900002715484, 'Maçã Kg', Decimal('0.680'), Decimal('9.99'), 'COHATRAC IV', datetime.date(2025, 2, 12))\n",
      "(2900004361467, 'Maxixe e Quiabo (Kg)', Decimal('0.230'), Decimal('22.49'), 'COHATRAC IV', datetime.date(2025, 1, 6))\n",
      "(2900004362259, 'Jongome', Decimal('1.000'), Decimal('2.09'), 'COHATRAC IV', datetime.date(2025, 1, 6))\n",
      "(2900004362778, 'Vinagreira', Decimal('1.000'), Decimal('3.09'), 'COHATRAC IV', datetime.date(2025, 1, 6))\n",
      "(7000002684287, 'Bolo caseiro da vovo laranja 430g', Decimal('1.000'), Decimal('9.99'), 'COHATRAC IV', datetime.date(2025, 1, 6))\n",
      "(7891008121728, 'Choc Branco Garoto', Decimal('1.000'), Decimal('8.89'), 'COHATRAC IV', datetime.date(2025, 2, 12))\n",
      "(7896015601164, 'Areia para Gato Tidy Cat (2 Kg)', Decimal('1.000'), Decimal('32.55'), 'COHATRAC IV', datetime.date(2025, 1, 6))\n",
      "(7896029046562, 'Ração para gato Whiskas AD atum 85g', Decimal('1.000'), Decimal('2.49'), 'COHATRAC IV', datetime.date(2025, 1, 6))\n",
      "(7896029047101, 'Ração para gato Whiskas JR carne 85g', Decimal('1.000'), Decimal('2.49'), 'COHATRAC IV', datetime.date(2025, 1, 6))\n",
      "(7896419728870, 'File Peito Lar Bdj (Kg)', Decimal('1.000'), Decimal('23.90'), 'COHATRAC IV', datetime.date(2025, 1, 6))\n",
      "(7898211383813, 'Oleo Capilar Keratex Alecrim 60 mL', Decimal('2.000'), Decimal('9.99'), 'COHATRAC IV', datetime.date(2025, 1, 6))\n",
      "(7898211383837, 'Oleo Capilar Keratex Abacaxi 60 mL', Decimal('1.000'), Decimal('9.99'), 'COHATRAC IV', datetime.date(2025, 1, 6))\n",
      "(7898957749256, 'Uva Vitoria 500g', Decimal('1.000'), Decimal('7.99'), 'COHATRAC IV', datetime.date(2025, 2, 12))\n",
      "(7899602500868, 'Seleta de legumes quero Sh 170g', Decimal('1.000'), Decimal('4.85'), 'COHATRAC IV', datetime.date(2025, 1, 6))\n",
      "(7899676510950, 'Açucar cristal Blanco 1Kg', Decimal('1.000'), Decimal('3.69'), 'COHATRAC IV', datetime.date(2025, 1, 6))\n"
     ]
    }
   ],
   "source": [
    "q1 = \"\"\"\n",
    "SELECT *\n",
    "FROM nota;\n",
    "\"\"\"\n",
    "\n",
    "connection = create_db_connection(\"localhost\", \"root\", pw, 'supermercado')\n",
    "results = read_query(connection, q1)\n",
    "\n",
    "for result in results:\n",
    "  print(result)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "bd66a237-8400-4fe0-9aab-03ed1a8ba80a",
   "metadata": {},
   "source": [
    "### Formatando os resultados em uma lista"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 22,
   "id": "17fa2f9a-f8ac-4a4f-a295-90e8f72e3e08",
   "metadata": {},
   "outputs": [],
   "source": [
    "#Inicializa uma lista vazia \n",
    "from_db = []\n",
    "\n",
    "# Percorrer os resultados e inseri-los à lista\n",
    "\n",
    "# Retorna uma lista de tuplas\n",
    "for result in results:\n",
    "  result = result\n",
    "  from_db.append(result)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 23,
   "id": "aa8ff0ba-46f7-4b1e-b831-0eaf8eadadb7",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "[(192505231918, 'Pimenta Preta Moida 30g', Decimal('1.000'), Decimal('3.59'), 'COHATRAC IV', datetime.date(2025, 1, 6)), (2900000014060, 'Batatinha Lav (Kg)', Decimal('0.575'), Decimal('7.99'), 'COHATRAC IV', datetime.date(2025, 1, 6)), (2900000024724, 'Bisteca Suina Congelada (Kg)', Decimal('0.424'), Decimal('22.99'), 'COHATRAC IV', datetime.date(2025, 1, 6)), (2900000087545, 'Melão Kg', Decimal('1.795'), Decimal('3.49'), 'COHATRAC IV', datetime.date(2025, 2, 12)), (2900000087811, 'Abacate Kg', Decimal('0.480'), Decimal('6.99'), 'COHATRAC IV', datetime.date(2025, 2, 12)), (2900000091252, 'Cozidao Bovino (Kg)', Decimal('0.728'), Decimal('26.99'), 'COHATRAC IV', datetime.date(2025, 1, 6)), (2900000777835, 'Brocolis Ninja (Kg)', Decimal('0.264'), Decimal('38.99'), 'COHATRAC IV', datetime.date(2025, 1, 6)), (2900002715484, 'Maçã Kg', Decimal('0.680'), Decimal('9.99'), 'COHATRAC IV', datetime.date(2025, 2, 12)), (2900004361467, 'Maxixe e Quiabo (Kg)', Decimal('0.230'), Decimal('22.49'), 'COHATRAC IV', datetime.date(2025, 1, 6)), (2900004362259, 'Jongome', Decimal('1.000'), Decimal('2.09'), 'COHATRAC IV', datetime.date(2025, 1, 6)), (2900004362778, 'Vinagreira', Decimal('1.000'), Decimal('3.09'), 'COHATRAC IV', datetime.date(2025, 1, 6)), (7000002684287, 'Bolo caseiro da vovo laranja 430g', Decimal('1.000'), Decimal('9.99'), 'COHATRAC IV', datetime.date(2025, 1, 6)), (7891008121728, 'Choc Branco Garoto', Decimal('1.000'), Decimal('8.89'), 'COHATRAC IV', datetime.date(2025, 2, 12)), (7896015601164, 'Areia para Gato Tidy Cat (2 Kg)', Decimal('1.000'), Decimal('32.55'), 'COHATRAC IV', datetime.date(2025, 1, 6)), (7896029046562, 'Ração para gato Whiskas AD atum 85g', Decimal('1.000'), Decimal('2.49'), 'COHATRAC IV', datetime.date(2025, 1, 6)), (7896029047101, 'Ração para gato Whiskas JR carne 85g', Decimal('1.000'), Decimal('2.49'), 'COHATRAC IV', datetime.date(2025, 1, 6)), (7896419728870, 'File Peito Lar Bdj (Kg)', Decimal('1.000'), Decimal('23.90'), 'COHATRAC IV', datetime.date(2025, 1, 6)), (7898211383813, 'Oleo Capilar Keratex Alecrim 60 mL', Decimal('2.000'), Decimal('9.99'), 'COHATRAC IV', datetime.date(2025, 1, 6)), (7898211383837, 'Oleo Capilar Keratex Abacaxi 60 mL', Decimal('1.000'), Decimal('9.99'), 'COHATRAC IV', datetime.date(2025, 1, 6)), (7898957749256, 'Uva Vitoria 500g', Decimal('1.000'), Decimal('7.99'), 'COHATRAC IV', datetime.date(2025, 2, 12)), (7899602500868, 'Seleta de legumes quero Sh 170g', Decimal('1.000'), Decimal('4.85'), 'COHATRAC IV', datetime.date(2025, 1, 6)), (7899676510950, 'Açucar cristal Blanco 1Kg', Decimal('1.000'), Decimal('3.69'), 'COHATRAC IV', datetime.date(2025, 1, 6))]\n"
     ]
    }
   ],
   "source": [
    "print(from_db)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "69846267-adb9-4ee7-812e-5b26daf646e2",
   "metadata": {},
   "source": [
    "### Formatando o resultado em uma lista de listas"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 24,
   "id": "6b653ec8-f6ac-4c86-b6e8-33cd246e0659",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "[[192505231918, 'Pimenta Preta Moida 30g', Decimal('1.000'), Decimal('3.59'), 'COHATRAC IV', datetime.date(2025, 1, 6)], [2900000014060, 'Batatinha Lav (Kg)', Decimal('0.575'), Decimal('7.99'), 'COHATRAC IV', datetime.date(2025, 1, 6)], [2900000024724, 'Bisteca Suina Congelada (Kg)', Decimal('0.424'), Decimal('22.99'), 'COHATRAC IV', datetime.date(2025, 1, 6)], [2900000087545, 'Melão Kg', Decimal('1.795'), Decimal('3.49'), 'COHATRAC IV', datetime.date(2025, 2, 12)], [2900000087811, 'Abacate Kg', Decimal('0.480'), Decimal('6.99'), 'COHATRAC IV', datetime.date(2025, 2, 12)], [2900000091252, 'Cozidao Bovino (Kg)', Decimal('0.728'), Decimal('26.99'), 'COHATRAC IV', datetime.date(2025, 1, 6)], [2900000777835, 'Brocolis Ninja (Kg)', Decimal('0.264'), Decimal('38.99'), 'COHATRAC IV', datetime.date(2025, 1, 6)], [2900002715484, 'Maçã Kg', Decimal('0.680'), Decimal('9.99'), 'COHATRAC IV', datetime.date(2025, 2, 12)], [2900004361467, 'Maxixe e Quiabo (Kg)', Decimal('0.230'), Decimal('22.49'), 'COHATRAC IV', datetime.date(2025, 1, 6)], [2900004362259, 'Jongome', Decimal('1.000'), Decimal('2.09'), 'COHATRAC IV', datetime.date(2025, 1, 6)], [2900004362778, 'Vinagreira', Decimal('1.000'), Decimal('3.09'), 'COHATRAC IV', datetime.date(2025, 1, 6)], [7000002684287, 'Bolo caseiro da vovo laranja 430g', Decimal('1.000'), Decimal('9.99'), 'COHATRAC IV', datetime.date(2025, 1, 6)], [7891008121728, 'Choc Branco Garoto', Decimal('1.000'), Decimal('8.89'), 'COHATRAC IV', datetime.date(2025, 2, 12)], [7896015601164, 'Areia para Gato Tidy Cat (2 Kg)', Decimal('1.000'), Decimal('32.55'), 'COHATRAC IV', datetime.date(2025, 1, 6)], [7896029046562, 'Ração para gato Whiskas AD atum 85g', Decimal('1.000'), Decimal('2.49'), 'COHATRAC IV', datetime.date(2025, 1, 6)], [7896029047101, 'Ração para gato Whiskas JR carne 85g', Decimal('1.000'), Decimal('2.49'), 'COHATRAC IV', datetime.date(2025, 1, 6)], [7896419728870, 'File Peito Lar Bdj (Kg)', Decimal('1.000'), Decimal('23.90'), 'COHATRAC IV', datetime.date(2025, 1, 6)], [7898211383813, 'Oleo Capilar Keratex Alecrim 60 mL', Decimal('2.000'), Decimal('9.99'), 'COHATRAC IV', datetime.date(2025, 1, 6)], [7898211383837, 'Oleo Capilar Keratex Abacaxi 60 mL', Decimal('1.000'), Decimal('9.99'), 'COHATRAC IV', datetime.date(2025, 1, 6)], [7898957749256, 'Uva Vitoria 500g', Decimal('1.000'), Decimal('7.99'), 'COHATRAC IV', datetime.date(2025, 2, 12)], [7899602500868, 'Seleta de legumes quero Sh 170g', Decimal('1.000'), Decimal('4.85'), 'COHATRAC IV', datetime.date(2025, 1, 6)], [7899676510950, 'Açucar cristal Blanco 1Kg', Decimal('1.000'), Decimal('3.69'), 'COHATRAC IV', datetime.date(2025, 1, 6)]]\n"
     ]
    }
   ],
   "source": [
    "# Retorna uma lista de listas\n",
    "from_db = []\n",
    "\n",
    "for result in results:\n",
    "  result = list(result)\n",
    "  from_db.append(result)\n",
    "print(from_db)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "53d11d9c-0452-4355-b598-33e4a53b8024",
   "metadata": {},
   "source": [
    "### Formatando o resultado em um DataFrame do Pandas"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 25,
   "id": "4629142a-b3ad-4f44-8025-a36a0a0bbf8f",
   "metadata": {},
   "outputs": [],
   "source": [
    "# Retorna uma lista de listas e cria um DataFrame do Pandas\n",
    "from_db = []\n",
    "\n",
    "for result in results:\n",
    "  result = list(result)\n",
    "  from_db.append(result)\n",
    "\n",
    "\n",
    "columns = [\"Codigo_prod\", \"Descricao\", \"Quantidade\", \"ValorUnit\", \"Local\",\"Data\"]\n",
    "df = pd.DataFrame(from_db, columns=columns)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 26,
   "id": "7737052a-db22-48f1-a0df-7cf7505b3fc0",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Codigo_prod</th>\n",
       "      <th>Descricao</th>\n",
       "      <th>Quantidade</th>\n",
       "      <th>ValorUnit</th>\n",
       "      <th>Local</th>\n",
       "      <th>Data</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>192505231918</td>\n",
       "      <td>Pimenta Preta Moida 30g</td>\n",
       "      <td>1.000</td>\n",
       "      <td>3.59</td>\n",
       "      <td>COHATRAC IV</td>\n",
       "      <td>2025-01-06</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>2900000014060</td>\n",
       "      <td>Batatinha Lav (Kg)</td>\n",
       "      <td>0.575</td>\n",
       "      <td>7.99</td>\n",
       "      <td>COHATRAC IV</td>\n",
       "      <td>2025-01-06</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>2900000024724</td>\n",
       "      <td>Bisteca Suina Congelada (Kg)</td>\n",
       "      <td>0.424</td>\n",
       "      <td>22.99</td>\n",
       "      <td>COHATRAC IV</td>\n",
       "      <td>2025-01-06</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>2900000087545</td>\n",
       "      <td>Melão Kg</td>\n",
       "      <td>1.795</td>\n",
       "      <td>3.49</td>\n",
       "      <td>COHATRAC IV</td>\n",
       "      <td>2025-02-12</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>2900000087811</td>\n",
       "      <td>Abacate Kg</td>\n",
       "      <td>0.480</td>\n",
       "      <td>6.99</td>\n",
       "      <td>COHATRAC IV</td>\n",
       "      <td>2025-02-12</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>2900000091252</td>\n",
       "      <td>Cozidao Bovino (Kg)</td>\n",
       "      <td>0.728</td>\n",
       "      <td>26.99</td>\n",
       "      <td>COHATRAC IV</td>\n",
       "      <td>2025-01-06</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6</th>\n",
       "      <td>2900000777835</td>\n",
       "      <td>Brocolis Ninja (Kg)</td>\n",
       "      <td>0.264</td>\n",
       "      <td>38.99</td>\n",
       "      <td>COHATRAC IV</td>\n",
       "      <td>2025-01-06</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7</th>\n",
       "      <td>2900002715484</td>\n",
       "      <td>Maçã Kg</td>\n",
       "      <td>0.680</td>\n",
       "      <td>9.99</td>\n",
       "      <td>COHATRAC IV</td>\n",
       "      <td>2025-02-12</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8</th>\n",
       "      <td>2900004361467</td>\n",
       "      <td>Maxixe e Quiabo (Kg)</td>\n",
       "      <td>0.230</td>\n",
       "      <td>22.49</td>\n",
       "      <td>COHATRAC IV</td>\n",
       "      <td>2025-01-06</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9</th>\n",
       "      <td>2900004362259</td>\n",
       "      <td>Jongome</td>\n",
       "      <td>1.000</td>\n",
       "      <td>2.09</td>\n",
       "      <td>COHATRAC IV</td>\n",
       "      <td>2025-01-06</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>10</th>\n",
       "      <td>2900004362778</td>\n",
       "      <td>Vinagreira</td>\n",
       "      <td>1.000</td>\n",
       "      <td>3.09</td>\n",
       "      <td>COHATRAC IV</td>\n",
       "      <td>2025-01-06</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>11</th>\n",
       "      <td>7000002684287</td>\n",
       "      <td>Bolo caseiro da vovo laranja 430g</td>\n",
       "      <td>1.000</td>\n",
       "      <td>9.99</td>\n",
       "      <td>COHATRAC IV</td>\n",
       "      <td>2025-01-06</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>12</th>\n",
       "      <td>7891008121728</td>\n",
       "      <td>Choc Branco Garoto</td>\n",
       "      <td>1.000</td>\n",
       "      <td>8.89</td>\n",
       "      <td>COHATRAC IV</td>\n",
       "      <td>2025-02-12</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>13</th>\n",
       "      <td>7896015601164</td>\n",
       "      <td>Areia para Gato Tidy Cat (2 Kg)</td>\n",
       "      <td>1.000</td>\n",
       "      <td>32.55</td>\n",
       "      <td>COHATRAC IV</td>\n",
       "      <td>2025-01-06</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>14</th>\n",
       "      <td>7896029046562</td>\n",
       "      <td>Ração para gato Whiskas AD atum 85g</td>\n",
       "      <td>1.000</td>\n",
       "      <td>2.49</td>\n",
       "      <td>COHATRAC IV</td>\n",
       "      <td>2025-01-06</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>15</th>\n",
       "      <td>7896029047101</td>\n",
       "      <td>Ração para gato Whiskas JR carne 85g</td>\n",
       "      <td>1.000</td>\n",
       "      <td>2.49</td>\n",
       "      <td>COHATRAC IV</td>\n",
       "      <td>2025-01-06</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>16</th>\n",
       "      <td>7896419728870</td>\n",
       "      <td>File Peito Lar Bdj (Kg)</td>\n",
       "      <td>1.000</td>\n",
       "      <td>23.90</td>\n",
       "      <td>COHATRAC IV</td>\n",
       "      <td>2025-01-06</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>17</th>\n",
       "      <td>7898211383813</td>\n",
       "      <td>Oleo Capilar Keratex Alecrim 60 mL</td>\n",
       "      <td>2.000</td>\n",
       "      <td>9.99</td>\n",
       "      <td>COHATRAC IV</td>\n",
       "      <td>2025-01-06</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>18</th>\n",
       "      <td>7898211383837</td>\n",
       "      <td>Oleo Capilar Keratex Abacaxi 60 mL</td>\n",
       "      <td>1.000</td>\n",
       "      <td>9.99</td>\n",
       "      <td>COHATRAC IV</td>\n",
       "      <td>2025-01-06</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>19</th>\n",
       "      <td>7898957749256</td>\n",
       "      <td>Uva Vitoria 500g</td>\n",
       "      <td>1.000</td>\n",
       "      <td>7.99</td>\n",
       "      <td>COHATRAC IV</td>\n",
       "      <td>2025-02-12</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>20</th>\n",
       "      <td>7899602500868</td>\n",
       "      <td>Seleta de legumes quero Sh 170g</td>\n",
       "      <td>1.000</td>\n",
       "      <td>4.85</td>\n",
       "      <td>COHATRAC IV</td>\n",
       "      <td>2025-01-06</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>21</th>\n",
       "      <td>7899676510950</td>\n",
       "      <td>Açucar cristal Blanco 1Kg</td>\n",
       "      <td>1.000</td>\n",
       "      <td>3.69</td>\n",
       "      <td>COHATRAC IV</td>\n",
       "      <td>2025-01-06</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "      Codigo_prod                             Descricao Quantidade ValorUnit  \\\n",
       "0    192505231918               Pimenta Preta Moida 30g      1.000      3.59   \n",
       "1   2900000014060                    Batatinha Lav (Kg)      0.575      7.99   \n",
       "2   2900000024724          Bisteca Suina Congelada (Kg)      0.424     22.99   \n",
       "3   2900000087545                              Melão Kg      1.795      3.49   \n",
       "4   2900000087811                            Abacate Kg      0.480      6.99   \n",
       "5   2900000091252                   Cozidao Bovino (Kg)      0.728     26.99   \n",
       "6   2900000777835                   Brocolis Ninja (Kg)      0.264     38.99   \n",
       "7   2900002715484                               Maçã Kg      0.680      9.99   \n",
       "8   2900004361467                  Maxixe e Quiabo (Kg)      0.230     22.49   \n",
       "9   2900004362259                               Jongome      1.000      2.09   \n",
       "10  2900004362778                            Vinagreira      1.000      3.09   \n",
       "11  7000002684287     Bolo caseiro da vovo laranja 430g      1.000      9.99   \n",
       "12  7891008121728                    Choc Branco Garoto      1.000      8.89   \n",
       "13  7896015601164       Areia para Gato Tidy Cat (2 Kg)      1.000     32.55   \n",
       "14  7896029046562   Ração para gato Whiskas AD atum 85g      1.000      2.49   \n",
       "15  7896029047101  Ração para gato Whiskas JR carne 85g      1.000      2.49   \n",
       "16  7896419728870               File Peito Lar Bdj (Kg)      1.000     23.90   \n",
       "17  7898211383813    Oleo Capilar Keratex Alecrim 60 mL      2.000      9.99   \n",
       "18  7898211383837    Oleo Capilar Keratex Abacaxi 60 mL      1.000      9.99   \n",
       "19  7898957749256                      Uva Vitoria 500g      1.000      7.99   \n",
       "20  7899602500868       Seleta de legumes quero Sh 170g      1.000      4.85   \n",
       "21  7899676510950             Açucar cristal Blanco 1Kg      1.000      3.69   \n",
       "\n",
       "          Local        Data  \n",
       "0   COHATRAC IV  2025-01-06  \n",
       "1   COHATRAC IV  2025-01-06  \n",
       "2   COHATRAC IV  2025-01-06  \n",
       "3   COHATRAC IV  2025-02-12  \n",
       "4   COHATRAC IV  2025-02-12  \n",
       "5   COHATRAC IV  2025-01-06  \n",
       "6   COHATRAC IV  2025-01-06  \n",
       "7   COHATRAC IV  2025-02-12  \n",
       "8   COHATRAC IV  2025-01-06  \n",
       "9   COHATRAC IV  2025-01-06  \n",
       "10  COHATRAC IV  2025-01-06  \n",
       "11  COHATRAC IV  2025-01-06  \n",
       "12  COHATRAC IV  2025-02-12  \n",
       "13  COHATRAC IV  2025-01-06  \n",
       "14  COHATRAC IV  2025-01-06  \n",
       "15  COHATRAC IV  2025-01-06  \n",
       "16  COHATRAC IV  2025-01-06  \n",
       "17  COHATRAC IV  2025-01-06  \n",
       "18  COHATRAC IV  2025-01-06  \n",
       "19  COHATRAC IV  2025-02-12  \n",
       "20  COHATRAC IV  2025-01-06  \n",
       "21  COHATRAC IV  2025-01-06  "
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "display(df)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "03fa346e-952e-4b70-b7c6-43077f70e57e",
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.10.12"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
